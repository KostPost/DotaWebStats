@using DotaWebStats.Services
@using DotaWebStats.Constants
@using DotaWebStats.Models.DotaData
@using DotaWebStats.Services.Helpers
@model DotaWebStats.Models.Common_Classes.PlayerLayoutViewModel
@inject IDotaDataService DotaDataService
@inject DotaDataHelper DotaDataHelper

@{
    Layout = "_Layout";

    Model.UserDotaStats = await DotaDataService.GetPlayerSummary(Model.PlayerId);

    ViewData["Title"] = $"Player Profile - {Model.UserDotaStats?.Profile?.UserName ?? "Unknown"}";

    WinLoseStats? winLoseStats = null;

    if (!string.IsNullOrEmpty(Model.UserDotaStats.Dota2Id))
    {
        if (long.TryParse(Model.UserDotaStats.Dota2Id, out var dota2Id))
        {
            winLoseStats = await DotaDataService.GetPlayerWinLoss(dota2Id);
        }
        else
        {
            <p>Error: Dota2Id is not a valid number.</p>
        }
    }
    else
    {
        <p>Error: Dota2Id is null or invalid.</p>
    }
}

@section Styles {
    <link rel="stylesheet" href="@Url.Content("~/css/_InfoPlayerLayout.css")"/>
}

<div class="profile-buttons-container white-box-container">
    <div class="profile-container">
        <div class="avatar-info-container">
            <div class="avatar-container">
                <img src="@Model.UserDotaStats.Profile.AvatarFull" alt="@Model.UserDotaStats.Profile.UserName's avatar" class="img-fluid rounded-circle mb-3" style="width: 100%; max-width: 200px;"/>
            </div>
            <div class="info-container">
                <h1>@Model.UserDotaStats.Profile.UserName</h1>
                @if (winLoseStats != null)
                {
                    <p class="win-rate">Win Rate: @(winLoseStats.WinRate.ToString("F2"))%</p>
                    <p class="win">Wins: @winLoseStats.Win</p>
                    <p class="loss">Losses: @winLoseStats.Lose</p>
                }
                else
                {
                    <p>No Win/Loss statistics available.</p>
                }
            </div>
        </div>
        <div class="rank-container">
            @if (Model.UserDotaStats.RankTier > 0)
            {
                <div class="rank-image">
                    <img src="@DotaDataHelper.GetRankImagePath(Model.UserDotaStats.RankTier)" alt="Rank Medal" style="width: 170px; height: 170px;"/>
                    <span class="rank-name">@DotaDataHelper.GetRankName(Model.UserDotaStats.RankTier)</span>
                </div>
            }
            else
            {
                <p>Unranked</p>
            }
            @if (Model.UserDotaStats.LeaderboardRank.HasValue)
            {
                <p>Leaderboard Rank: @Model.UserDotaStats.LeaderboardRank</p>
            }
        </div>
    </div>

    <div class="button-container">

        @if (Model.UserDotaStats?.Dota2Id != null)
        {
            <a href="@UrlConstants.PlayerOverviewPage(Model.UserDotaStats.Dota2Id)" class="btn">
                Overview
            </a>
        }
        else
        {
            <span class="btn disabled">Overview</span>
        }

        @if (Model.UserDotaStats?.Dota2Id != null)
        {
            <a href=@UrlConstants.PlayerMatchesPage(Model.UserDotaStats.Dota2Id) class="btn">
                Matches
            </a>
        }
        else
        {
            <span class="btn disabled">Overview</span>
        }


        <button class="btn">Heroes</button>
        <button class="btn">Peers</button>
        <button class="btn">Pros</button>
        <button class="btn">Totals</button>
        <button class="btn">Counts</button>
        <button class="btn">Histograms</button>
        <button class="btn">Ward Map</button>
        <button class="btn">Word Cloud</button>
        <button class="btn">Ratings</button>
    </div>
</div>