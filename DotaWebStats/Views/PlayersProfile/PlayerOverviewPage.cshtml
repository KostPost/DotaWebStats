@using DotaWebStats.Constants
@using DotaWebStats.Services.Helpers
@model PlayerViewModel

@section Styles {'
    <link rel="stylesheet" href="@Url.Content("~/css/PlayerOverview.css")"/>
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet"/>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
}

@{
    ViewData["Title"] = @Model.UserStats.Profile.UserName + " - Overview";
}

@await Html.PartialAsync("_InfoPlayerLayout", Model.UserStats)

<div class="stats-container">
    <div class="stats-title">
        <p class="average-maximum">
            <strong>Averages/Maximums in last 20 displayed matches</strong>
        </p>
    </div>

    <div class="winrate-container">
        <strong>WINRATE: @(Model.RecentMatchesSummary.WinRate.ToString("F2"))</strong>
    </div>


    <div class="stats-row">

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@Model.RecentMatchesSummary.AverageKills.ToString("F0")</strong>
                </div>
                <div class="stat-max">
                    <strong>@Model.RecentMatchesSummary.MaxKills</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>KILLS</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@Model.RecentMatchesSummary.AverageDeaths.ToString("F0")</strong>
                </div>
                <div class="stat-max">
                    <strong>@Model.RecentMatchesSummary.MaxDeaths</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>DEATHS</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@Model.RecentMatchesSummary.AverageAssists.ToString("F0")</strong>
                </div>
                <div class="stat-max">
                    <strong>@Model.RecentMatchesSummary.MaxAssists</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>ASSISTS</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@Model.RecentMatchesSummary.AverageGoldPerMin.ToString("F0")</strong>
                </div>
                <div class="stat-max">
                    <strong>@Model.RecentMatchesSummary.MaxGoldPerMin</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>GOLD PER MIN</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@Model.RecentMatchesSummary.AverageXpPerMin.ToString("F0")</strong>
                </div>
                <div class="stat-max">
                    <strong>@(Model.RecentMatchesSummary.MaxXpPerMin >= 1000 ? $"{Model.RecentMatchesSummary.MaxXpPerMin / 1000:F1}K" : Model.RecentMatchesSummary.MaxXpPerMin.ToString())</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>XP PER MIN</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@Model.RecentMatchesSummary.AverageLastHits.ToString("F0")</strong>
                </div>
                <div class="stat-max">
                    <strong>@Model.RecentMatchesSummary.MaxLastHits</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>LAST HITS</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@($"{Model.RecentMatchesSummary.AverageHeroDamage / 1000:F1}K")</strong>
                </div>
                <div class="stat-max">
                    <strong>@($"{Model.RecentMatchesSummary.MaxHeroDamage / 1000:F1}K")</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>HERO DAMAGE</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@($"{Model.RecentMatchesSummary.AverageHeroHealing / 1000:F1}K")</strong>
                </div>
                <div class="stat-max">
                    <strong>@($"{Model.RecentMatchesSummary.MaxHeroHealing / 1000:F1}K")</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>HERO HEALING</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@($"{Model.RecentMatchesSummary.AverageTowerDamage / 1000:F1}K")</strong>
                </div>
                <div class="stat-max">
                    <strong>@($"{Model.RecentMatchesSummary.MaxTowerDamage / 1000:F1}K")</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>TOWER DAMAGE</strong>
            </div>
        </div>

        <div class="stat-item-container">
            <div class="stat-item">
                <div class="stat-value">
                    <strong>@TimeSpan.FromSeconds(Model.RecentMatchesSummary.AverageDuration).ToString(@"mm\:ss")</strong>
                </div>
                <div class="stat-max">
                    <strong>@TimeSpan.FromSeconds(Model.RecentMatchesSummary.MaxDuration).ToString(@"mm\:ss")</strong>
                </div>
            </div>
            <div class="stat-label">
                <strong>DURATION</strong>
            </div>
        </div>
    </div>
</div>


<div class="table-container">
    <table class="match-table">
        <thead>
        <tr>
            <th>Hero</th>
            <th>Result</th>
            <th>Game Mode</th>
            <th>Duration</th>
            <th style="text-align: center;">K</th>
            <th style="text-align: center;">D</th>
            <th style="text-align: center;">A</th>

        </tr>
        </thead>
        <tbody>
        @if (Model.RecentMatches != null && Model.RecentMatches.Any())
        {
            foreach (var match in Model.RecentMatches)
            {
                <tr>


                    <td>
                        <div class="hero-info">
                            <img src="@DotaHeroHelper.GetHeroImage(match.HeroId)" alt="Hero Image" class="hero-image"/>
                            
                            
                            <a href="@UrlConstants.MatchOverviewPage(match.MatchId.ToString())" class="hero-name-link">
                                <strong>@DotaHeroHelper.GetHeroLocalizedName(match.HeroId)</strong>
                            </a>
                            
                        </div>
                    </td>


                    <td>
                        <a style="text-decoration: none; color: inherit;">
                            <div style="color: @(DotaDataHelper.IsPlayerWin(match.PlayerSlot, match.RadiantWin) ? "green" : "red"); font-weight: bold;">
                                <strong>@(DotaDataHelper.IsPlayerWin(match.PlayerSlot, match.RadiantWin) ? "Win" : "Loss")</strong>
                            </div>
                        </a>

                    </td>


                    <td>
                        <div>
                            <strong>@DotaDataHelper.GetGameModeName(match.GameMode) </strong>
                        </div>
                        <div>
                            <strong>@DotaDataHelper.GetRankName(match.AverageRank ?? 0)</strong>
                        </div>
                    </td>
                    <td>
                        <div>
                            <strong>Duration: @TimeSpan.FromSeconds(match.Duration).ToString(@"mm\:ss")</strong>
                        </div>
                        <div>
                            <strong>@(match.PlayerSlot < 5 ? "Radiant" : "Dire")</strong>
                        </div>
                    </td>
                    <td>
                        <div class="kill">
                            <strong>@match.Kills</strong>
                        </div>
                    </td>
                    <td>
                        <div class="death">
                            <strong>@match.Deaths</strong>
                        </div>
                    </td>
                    <td>
                        <div class="assists">
                            <strong>@match.Assists</strong>
                        </div>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="7" style="text-align: center;">
                    <strong>No data</strong>
                </td>
            </tr>
        }

        </tbody>
    </table>
</div>

<div class="page-data"></div>